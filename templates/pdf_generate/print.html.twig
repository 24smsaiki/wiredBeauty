{% extends 'base.html.twig' %}


{% block body %}
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.3/jspdf.debug.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>

<a href="#" id="downloadPdf">Download Report Page as PDF</a>
<br/><br/>
<div id="reportPage">
 

 
<div style="width: 30%; float: left;">
    {{render_chart(chart3, {'id': 'my-chart3'}) }}
</div>
  <div style="width: 30%; float: left;">
    {{render_chart(chart2, {'id': 'my-chart6'}) }}
  </div>

  <div style="width: 30%; float: left;">
    {# {{render_chart(chart3)}} #}
  </div>


  <br/><br/><br/>

  {# <div style="width: 30%; height: 400px; clear: both;">
    <canvas id="myChart3" style="width: 40%"></canvas>
  </div> #}
</div>


<script>


var randomScalingFactor = function() {
  return (Math.random() > 0.5 ? 1.0 : 1.0) * Math.round(Math.random() * 100);
};




$('#downloadPdf').click(function(event) {
  // get size of report page
  var reportPageHeight = 1000;
  var reportPageWidth = 1000;
  
  // create a new canvas object that we will populate with all other canvas objects
  var pdfCanvas = $('<canvas />').attr({
    id: "canvaspdf",
    width: reportPageWidth,
    height: reportPageHeight
  });
  
  // keep track canvas position
  var pdfctx = $(pdfCanvas)[0].getContext('2d');
  var pdfctxX = 0;
  var pdfctxY = 0;
  var buffer = 100;
  
  // for each chart.js chart
  $("canvas").each(function(index) {
    // get the chart height/width
    var canvasHeight = $(this).innerHeight();
    var canvasWidth = $(this).innerWidth();
    
    // draw the chart into the new canvas
    pdfctx.drawImage($(this)[0], pdfctxX, pdfctxY, canvasWidth, canvasHeight);
    pdfctxX += canvasWidth + buffer;
    
    // our report page is in a grid pattern so replicate that in the new canvas
    if (index % 2 === 1) {
      pdfctxX = 0;
      pdfctxY += canvasHeight + buffer;
    }
  });
  
  // create new pdf and add our new canvas as an image
  var pdf = new jsPDF('landscape');
  pdf.addImage($(pdfCanvas)[0], 'PNG', 0, 0);
  
  // download the pdf
  pdf.save('filename.pdf');
});
</script>




{% endblock %}